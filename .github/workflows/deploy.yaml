name: Deploy on Prod

on:
  push:
    branches: ["main"]

jobs:
  build-client:
    runs-on: ubuntu-24.04-arm
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create VITE_* .env file
        run: |
          touch ./client/.env
          echo "VITE_BACKEND_URL=${{ vars.VITE_BACKEND_URL }}" > ./client/.env

      - name: Build and push client
        uses: docker/build-push-action@v6
        with:
          context: client/
          push: true
          tags: lblcs/lowbudgetlcs-com:latest-client

      - name: Cleanup VITE_* variables
        run: |
          rm client/.env

  build-server:
    runs-on: ubuntu-24.04-arm
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push server
        uses: docker/build-push-action@v6
        with:
          context: server/
          push: true
          tags: lblcs/lowbudgetlcs-com:latest-server

  deploy:
    needs: 
      - build-client
      - build-server
    runs-on: ubuntu-latest
    steps:
      - name: Execute docker compose on prod server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT  }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /lblcs/docker/lowbudgetlcs-com
            echo CLIENT_ID="${{ secrets.CLIENT_ID }}" > .env
            echo CLIENT_SECRET="${{ secrets.CLIENT_SECRET }}" >> .env
            echo PRODUCTION="${{ vars.PRODUCTION }}" >> .env
            echo DATABASE_URL="${{ secrets.DATABASE_URL }}" >> .env
            echo RIOTAPI="${{ secrets.RIOT_API_TOKEN }}" >> .env
            docker compose down
            docker compose pull
            docker compose up -d
            rm -f ./.env
