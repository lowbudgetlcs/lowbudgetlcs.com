name: Deploy on Prod

on:
  push:
    branches: ["main"]

jobs:
  env:
    uses: ./.github/workflows/build-env.yaml

  build:
    needs: env
    runs-on: ubuntu-latest
    steps:
      - name: Download env artifact
        uses: actions/download-artifact@v4
        with:
          name: env

      - name: Import env
        shell: bash
        run: |
          while read env; do
            echo $env >> $GITHUB_ENV
          done <<< $(cat .env.art)

      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Build and push Docker image
        run: |
          # Build client
          touch client/.env
          echo VITE_BACKEND_URL="${{ vars.VITE_BACKEND_URL }}" >> client/.env
          docker build -t lblcs/${{ env.APP }}:latest-client -f client/Dockerfile client/
          docker tag lblcs/${{ env.APP }}:latest-client lblcs/${{ env.APP }}:latest-client
          docker tag lblcs/${{ env.APP }}:latest-client lblcs/${{ env.APP }}:${{ env.VERSION }}-client
          docker push lblcs/${{ env.APP }}:latest-client
          docker push lblcs/${{ env.APP}}:${{ env.VERSION }}-client
          # Build server
          docker build -t lblcs/${{ env.APP }}:latest-server -f server/Dockerfile server/
          docker tag lblcs/${{ env.APP }}:latest-server lblcs/${{ env.APP }}:latest-server
          docker tag lblcs/${{ env.APP }}:latest-server lblcs/${{ env.APP }}:${{ env.VERSION }}-server
          docker push lblcs/${{ env.APP }}:latest-server
          docker push lblcs/${{ env.APP}}:${{ env.VERSION }}-server

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download env artifact
        uses: actions/download-artifact@v4
        with:
          name: env

      - name: Import env
        shell: bash
        run: |
          while read env; do
            echo $env >> $GITHUB_ENV
          done <<< $( cat .env.art)

      - name: Execute docker compose on prod server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT  }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /lblcs/docker/${{ env.APP }}
            echo CLIENT_ID="${{ secrets.CLIENT_ID }}" > .env
            echo CLIENT_SECRET="${{ secrets.CLIENT_SECRET }}" >> .env
            echo PRODUCTION="${{ vars.PRODUCTION }}" >> .env
            echo DATABASE_URL="${{ secrets.DATABASE_URL }}" >> .env
            docker compose down
            docker compose pull
            docker compose up -d
